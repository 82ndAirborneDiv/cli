// Code generated by go-swagger; DO NOT EDIT.

package limits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	mono_models "github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// NewEditOrganizationLimitsParams creates a new EditOrganizationLimitsParams object
// with the default values initialized.
func NewEditOrganizationLimitsParams() *EditOrganizationLimitsParams {
	var ()
	return &EditOrganizationLimitsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEditOrganizationLimitsParamsWithTimeout creates a new EditOrganizationLimitsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEditOrganizationLimitsParamsWithTimeout(timeout time.Duration) *EditOrganizationLimitsParams {
	var ()
	return &EditOrganizationLimitsParams{

		timeout: timeout,
	}
}

// NewEditOrganizationLimitsParamsWithContext creates a new EditOrganizationLimitsParams object
// with the default values initialized, and the ability to set a context for a request
func NewEditOrganizationLimitsParamsWithContext(ctx context.Context) *EditOrganizationLimitsParams {
	var ()
	return &EditOrganizationLimitsParams{

		Context: ctx,
	}
}

// NewEditOrganizationLimitsParamsWithHTTPClient creates a new EditOrganizationLimitsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEditOrganizationLimitsParamsWithHTTPClient(client *http.Client) *EditOrganizationLimitsParams {
	var ()
	return &EditOrganizationLimitsParams{
		HTTPClient: client,
	}
}

/*EditOrganizationLimitsParams contains all the parameters to send to the API endpoint
for the edit organization limits operation typically these are written to a http.Request
*/
type EditOrganizationLimitsParams struct {

	/*Limits
	  the limits to set

	*/
	Limits *mono_models.LimitsEditable
	/*OrganizationName
	  desired organization

	*/
	OrganizationName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the edit organization limits params
func (o *EditOrganizationLimitsParams) WithTimeout(timeout time.Duration) *EditOrganizationLimitsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edit organization limits params
func (o *EditOrganizationLimitsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edit organization limits params
func (o *EditOrganizationLimitsParams) WithContext(ctx context.Context) *EditOrganizationLimitsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edit organization limits params
func (o *EditOrganizationLimitsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edit organization limits params
func (o *EditOrganizationLimitsParams) WithHTTPClient(client *http.Client) *EditOrganizationLimitsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edit organization limits params
func (o *EditOrganizationLimitsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimits adds the limits to the edit organization limits params
func (o *EditOrganizationLimitsParams) WithLimits(limits *mono_models.LimitsEditable) *EditOrganizationLimitsParams {
	o.SetLimits(limits)
	return o
}

// SetLimits adds the limits to the edit organization limits params
func (o *EditOrganizationLimitsParams) SetLimits(limits *mono_models.LimitsEditable) {
	o.Limits = limits
}

// WithOrganizationName adds the organizationName to the edit organization limits params
func (o *EditOrganizationLimitsParams) WithOrganizationName(organizationName string) *EditOrganizationLimitsParams {
	o.SetOrganizationName(organizationName)
	return o
}

// SetOrganizationName adds the organizationName to the edit organization limits params
func (o *EditOrganizationLimitsParams) SetOrganizationName(organizationName string) {
	o.OrganizationName = organizationName
}

// WriteToRequest writes these params to a swagger request
func (o *EditOrganizationLimitsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limits != nil {
		if err := r.SetBodyParam(o.Limits); err != nil {
			return err
		}
	}

	// path param organizationName
	if err := r.SetPathParam("organizationName", o.OrganizationName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
