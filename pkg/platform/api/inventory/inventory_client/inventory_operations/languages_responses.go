// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	inventory_models "github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// LanguagesReader is a Reader for the Languages structure.
type LanguagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LanguagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLanguagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewLanguagesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLanguagesOK creates a LanguagesOK with default headers values
func NewLanguagesOK() *LanguagesOK {
	return &LanguagesOK{}
}

/*LanguagesOK handles this case with default header values.

Returns all languages.
*/
type LanguagesOK struct {
	Payload []*inventory_models.IngredientAndVersions
}

func (o *LanguagesOK) Error() string {
	return fmt.Sprintf("[GET /languages][%d] languagesOK  %+v", 200, o.Payload)
}

func (o *LanguagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanguagesDefault creates a LanguagesDefault with default headers values
func NewLanguagesDefault(code int) *LanguagesDefault {
	return &LanguagesDefault{
		_statusCode: code,
	}
}

/*LanguagesDefault handles this case with default header values.

generic error response
*/
type LanguagesDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the languages default response
func (o *LanguagesDefault) Code() int {
	return o._statusCode
}

func (o *LanguagesDefault) Error() string {
	return fmt.Sprintf("[GET /languages][%d] languages default  %+v", o._statusCode, o.Payload)
}

func (o *LanguagesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
