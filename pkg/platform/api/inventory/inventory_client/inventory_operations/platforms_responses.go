// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	inventory_models "github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// PlatformsReader is a Reader for the Platforms structure.
type PlatformsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PlatformsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPlatformsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPlatformsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPlatformsOK creates a PlatformsOK with default headers values
func NewPlatformsOK() *PlatformsOK {
	return &PlatformsOK{}
}

/*PlatformsOK handles this case with default header values.

Returns all platforms.
*/
type PlatformsOK struct {
	Payload []*inventory_models.Platform
}

func (o *PlatformsOK) Error() string {
	return fmt.Sprintf("[GET /platforms][%d] platformsOK  %+v", 200, o.Payload)
}

func (o *PlatformsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPlatformsDefault creates a PlatformsDefault with default headers values
func NewPlatformsDefault(code int) *PlatformsDefault {
	return &PlatformsDefault{
		_statusCode: code,
	}
}

/*PlatformsDefault handles this case with default header values.

generic error response
*/
type PlatformsDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the platforms default response
func (o *PlatformsDefault) Code() int {
	return o._statusCode
}

func (o *PlatformsDefault) Error() string {
	return fmt.Sprintf("[GET /platforms][%d] platforms default  %+v", o._statusCode, o.Payload)
}

func (o *PlatformsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
