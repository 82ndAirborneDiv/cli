// Code generated by go-swagger; DO NOT EDIT.

package headchef_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// BuildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties Metadata about the provided features, keyed by feature name.
// swagger:model buildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties
type BuildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties struct {

	// Whether this ingredient version is the default provider of this feature..
	IsDefault bool `json:"is_default,omitempty"`

	// The namespace to which the provided feature belongs.
	Namespace string `json:"namespace,omitempty"`

	// The version of this feature provided by the ingredient version.
	Version string `json:"version,omitempty"`
}

// Validate validates this build request recipe resolved requirements items ingredient version provides additional properties
func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties) UnmarshalBinary(b []byte) error {
	var res BuildRequestRecipeResolvedRequirementsItemsIngredientVersionProvidesAdditionalProperties
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
