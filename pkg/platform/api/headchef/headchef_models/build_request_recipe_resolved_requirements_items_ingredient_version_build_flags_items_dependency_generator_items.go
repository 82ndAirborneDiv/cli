// Code generated by go-swagger; DO NOT EDIT.

package headchef_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems build request recipe resolved requirements items ingredient version build flags items dependency generator items
// swagger:model buildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems
type BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems struct {

	// When this is true the dependency is added.
	// Required: true
	Condition *string `json:"condition"`

	// DSL code to generate the dependency that is needed. This is expected to return a list of paired names and version specs.
	// Required: true
	Dependencies *string `json:"dependencies"`
}

// Validate validates this build request recipe resolved requirements items ingredient version build flags items dependency generator items
func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCondition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDependencies(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems) validateCondition(formats strfmt.Registry) error {

	if err := validate.Required("condition", "body", m.Condition); err != nil {
		return err
	}

	return nil
}

func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems) validateDependencies(formats strfmt.Registry) error {

	if err := validate.Required("dependencies", "body", m.Dependencies); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems) UnmarshalBinary(b []byte) error {
	var res BuildRequestRecipeResolvedRequirementsItemsIngredientVersionBuildFlagsItemsDependencyGeneratorItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
