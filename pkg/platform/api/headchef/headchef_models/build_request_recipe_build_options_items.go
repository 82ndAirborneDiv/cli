// Code generated by go-swagger; DO NOT EDIT.

package headchef_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BuildRequestRecipeBuildOptionsItems Build Option
//
// A build option is a setting for all ingredients in a recipe.
// swagger:model buildRequestRecipeBuildOptionsItems
type BuildRequestRecipeBuildOptionsItems struct {

	// Build option name
	// Required: true
	// Enum: [debug static threaded]
	Option *string `json:"option"`
}

// Validate validates this build request recipe build options items
func (m *BuildRequestRecipeBuildOptionsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var buildRequestRecipeBuildOptionsItemsTypeOptionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["debug","static","threaded"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		buildRequestRecipeBuildOptionsItemsTypeOptionPropEnum = append(buildRequestRecipeBuildOptionsItemsTypeOptionPropEnum, v)
	}
}

const (

	// BuildRequestRecipeBuildOptionsItemsOptionDebug captures enum value "debug"
	BuildRequestRecipeBuildOptionsItemsOptionDebug string = "debug"

	// BuildRequestRecipeBuildOptionsItemsOptionStatic captures enum value "static"
	BuildRequestRecipeBuildOptionsItemsOptionStatic string = "static"

	// BuildRequestRecipeBuildOptionsItemsOptionThreaded captures enum value "threaded"
	BuildRequestRecipeBuildOptionsItemsOptionThreaded string = "threaded"
)

// prop value enum
func (m *BuildRequestRecipeBuildOptionsItems) validateOptionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, buildRequestRecipeBuildOptionsItemsTypeOptionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *BuildRequestRecipeBuildOptionsItems) validateOption(formats strfmt.Registry) error {

	if err := validate.Required("option", "body", m.Option); err != nil {
		return err
	}

	// value enum
	if err := m.validateOptionEnum("option", "body", *m.Option); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BuildRequestRecipeBuildOptionsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildRequestRecipeBuildOptionsItems) UnmarshalBinary(b []byte) error {
	var res BuildRequestRecipeBuildOptionsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
