name: Build-Test-Deploy
"on":
  push:
    branches:
    - master
  pull_request: null
jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version:
        - 1.13.x
        platform:
        - windows-latest
    runs-on: ${{ matrix.platform }}
    env:
      ACTIVESTATE_CLI_DISABLE_RUNTIME: true
      GOFLAGS: -mod=vendor
      SHELL: bash
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Install State Tool
      shell: bash
      run: |
        ./installers/install.sh -n -b master
        echo "::add-path::$HOME/.local/bin"
    - name: Build
      shell: bash
      run: |
        echo "Branch: $GITHUB_HEAD_REF"
        if [[ "$GITHUB_HEAD_REF" == "master" ]]; then
          export BRANCH_OVERRIDE=unstable
        fi
        state run build
    - name: Generate Update
      shell: bash
      run: state run generate-update
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        shell: bash
        path: build/
  build_msi:
    name: Build MSI's
    runs-on: windows-latest
    env:
      ACTIVESTATE_CLI_DISABLE_RUNTIME: true
      GOFLAGS: -mod=vendor
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Install State Tool
      shell: bash
      run: |
        ./installers/install.sh -n -b master
        echo "::add-path::$HOME/.local/bin"
    - name: Build State MSI
      shell: bash
      run: |
        echo $MSI_CERT_BASE64 | base64 --decode > Cert.p12
        export PATH=/c/Program\ Files\ \(x86\)/WiX\ Toolset\ v3.11/bin/:/c/Program\ Files\ \(x86\)/Windows\ Kits/10/bin/10.0.16299.0/x86/:$PATH
        state run build-msi-state
        signtool.exe sign -d "ActiveState State Tool" -f "Cert.p12" -p ${CODE_SIGNING_PASSWD} build/state_tool.msi
      env:
        CODE_SIGNING_PASSWD: ${{ secrets.CODE_SIGNING_PASSWD }}
        MSI_CERT_BASE64: ${{ secrets.MSI_CERT_BASE64 }}
    - name: Build Languages MSI
      shell: bash
      run: |
        echo $MSI_CERT_BASE64 | base64 --decode > Cert.p12
        export PATH=/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Enterprise/MSBuild/Current/Bin/:/c/Program\ Files\ \(x86\)/Windows\ Kits/10/bin/10.0.16299.0/x86/:$PATH
        state run build-msi-language ActivePerl-5.26 http://docs.activestate.com/activeperl/5.26/get/relnotes/
        signtool.exe sign -d "ActiveState Language Installer" -f "Cert.p12" -p ${CODE_SIGNING_PASSWD} ./build/ActivePerl-5.26.msi
        state run build-msi-language ActivePerl-5.28 http://docs.activestate.com/activeperl/5.28/get/relnotes/
        signtool.exe sign -d "ActiveState Language Installer" -f "Cert.p12" -p ${CODE_SIGNING_PASSWD} ./build/ActivePerl-5.28.msi
      env:
        CODE_SIGNING_PASSWD: ${{ secrets.CODE_SIGNING_PASSWD }}
        MSI_CERT_BASE64: ${{ secrets.MSI_CERT_BASE64 }}
  unittest:
    name: Unit Test
    strategy:
      matrix:
        go-version:
        - 1.13.x
        platform:
        - windows-latest
    runs-on: ${{ matrix.platform }}
    env:
      ACTIVESTATE_CLI_DISABLE_RUNTIME: true
      GOFLAGS: -mod=vendor
      SHELL: bash
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Install State Tool
      shell: bash
      run: |
        ./installers/install.sh -n -b master
        echo "::add-path::$HOME/.local/bin"
    - name: Preprocess
      shell: bash
      run: state run preprocess
    - name: Unit Tests
      shell: bash
      run: |
        go test -v `go list ./... | grep -v api | grep -v integration | grep -v expect`
  deploy:
    name: Deploy
    needs:
    - build
    - build_msi
    - unittest
    runs-on: ubuntu-latest
    env:
      ACTIVESTATE_CLI_DISABLE_RUNTIME: true
      GOFLAGS: -mod=vendor
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Install State Tool
      shell: bash
      run: |
        ./installers/install.sh -n -b master
        echo "::add-path::$HOME/.local/bin"
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build
        shell: bash
        path: build/
    - name: Deploy
      shell: bash
      run: |
        state run deploy-updates
        if [[ "$GITHUB_HEAD_REF" == "master" ]]; then
          state run deploy-installers
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
