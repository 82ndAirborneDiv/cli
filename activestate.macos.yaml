constants:
  - name: SYSTRAY_APP
    if: eq .OS.Name "MacOS"
    value: ActiveState\ Desktop.app
scripts:
  - name: build-systray-app
    language: bash
    standalone: true
    if: eq .OS.Name "MacOS"
    description: Copies the MacOS application directory to the build dir
    value: |
      mkdir -p build/${constants.SYSTRAY_APP}

      cp -r installers/${constants.SYSTRAY_APP} build/
  - name: generate-update
    language: bash
    standalone: true
    if: eq .OS.Name "MacOS"
    description: Generate update files
    value: |
      set -e
      $constants.SET_ENV

      export GOARCH=${1:-amd64}
      mkdir -p ./build/update
      go run scripts/update-generator/main.go --systemAppDir $BUILD_TARGET_DIR/$constants.SYSTRAY_APP -o ./build/update \
      $BUILD_TARGET_DIR/$constants.BUILD_INSTALLER_TARGET \
      $BUILD_TARGET_DIR/$constants.BUILD_DAEMON_TARGET \
      $BUILD_TARGET_DIR/$constants.BUILD_SYSTRAY_TARGET \
      $BUILD_TARGET_DIR/$constants.BUILD_TARGET \
  - name: generate-test-update
    language: bash
    standalone: true
    if: eq .OS.Name "MacOS"
    description: |
      Generate tests update files. These can be safely uploaded to s3, and can be used to test an installation/update
    value: |
      set -e
      $constants.SET_ENV
      mkdir -p ./build/test
      mkdir -p ./build/test-update
      TEST_VERSION="99.99.9999"

      TEST_STATE_TOOL=./build/test/$constants.BUILD_TARGET
      TEST_STATE_SVC=./build/test/$constants.BUILD_DAEMON_TARGET
      TEST_STATE_TRAY=./build/test/$constants.BUILD_SYSTRAY_TARGET
      TEST_AS_DESKTOP=./build/test/$constants.SYSTRAY_APP
      go build -o $TEST_STATE_TOOL ./internal/testhelpers/installation/fakeversioncmd
      cp -a $TEST_STATE_TOOL $TEST_STATE_SVC
      cp -a $TEST_STATE_TOOL $TEST_STATE_TRAY

      cp -r installers/${constants.SYSTRAY_APP} build/test/

      go run scripts/update-generator/main.go -v ${TEST_VERSION} --systemAppDir "$TEST_AS_DESKTOP" -o ./build/test-update \
        $BUILD_TARGET_DIR/$constants.BUILD_INSTALLER_TARGET \
        $TEST_STATE_TOOL $TEST_STATE_SVC \
        $TEST_STATE_TRAY

      echo "compile test-channel update"
      go build -o $TEST_STATE_TOOL -ldflags "-X main.channel=test-channel" ./internal/testhelpers/installation/fakeversioncmd
      cp -a $TEST_STATE_TOOL $TEST_STATE_SVC
      cp -a $TEST_STATE_TOOL $TEST_STATE_TRAY

      cp -r installers/${constants.SYSTRAY_APP} build/test/

      go run scripts/update-generator/main.go -b test-channel -v ${TEST_VERSION} --systemAppDir "$TEST_AS_DESKTOP" -o ./build/test-update \
        $BUILD_TARGET_DIR/$constants.BUILD_INSTALLER_TARGET \
        $TEST_STATE_TOOL \
        $TEST_STATE_SVC \
        $TEST_STATE_TRAY